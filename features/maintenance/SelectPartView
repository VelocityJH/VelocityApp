import SwiftUI

struct SelectPartsView: View {
    let allParts: [SparePart]
    let onSelection: (SparePart) -> Void

    @Environment(\.dismiss) var dismiss
    @State private var searchText = ""
    @State private var selectedPart: SparePart?

    var filteredParts: [SparePart] {
        if searchText.isEmpty {
            return allParts
        } else {
            return allParts.filter {
                $0.name.localizedCaseInsensitiveContains(searchText) ||
                $0.number.localizedCaseInsensitiveContains(searchText)
            }
        }
    }

    var body: some View {
        StandardBackgroundView {
            VStack(spacing: 0) {
                TopNavBar(title: "Select Parts", onBack: { dismiss() }, onHome: { dismiss() })

                // Search Bar
                TextField("Search by name or number", text: $searchText)
                    .textFieldStyle(RoundedBorderTextFieldStyle())
                    .padding(.horizontal)
                    .padding(.vertical, 10)

                ScrollView {
                    VStack(spacing: 12) {
                        ForEach(filteredParts) { part in
                            Button(action: {
                                selectedPart = part
                            }) {
                                VStack(alignment: .leading, spacing: 6) {
                                    Text(part.name).bold()
                                    Text("Number: \(part.number)")
                                    Text("Location: \(part.location)")
                                    Text("Stock: \(part.stock)")
                                }
                                .padding()
                                .frame(maxWidth: .infinity, alignment: .leading)
                                .background(selectedPart?.id == part.id ? Color.green : Color.white)
                                .foregroundColor(.black)
                                .cornerRadius(12)
                                .shadow(radius: 1)
                            }
                            .padding(.horizontal)
                        }
                    }
                    .padding(.top, 10)
                }

                // Confirm Selection Button
                if let confirmed = selectedPart {
                    Button("Select Part") {
                        onSelection(confirmed)
                        dismiss()
                    }
                    .frame(maxWidth: .infinity)
                    .padding()
                    .background(Color.blue)
                    .foregroundColor(.white)
                    .cornerRadius(12)
                    .padding()
                }
            }
        }
    }
}