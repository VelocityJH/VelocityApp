import SwiftUI

struct FaultGuidesView: View {
    @Environment(\.dismiss) var dismiss
    @State private var searchText: String = ""
    
    // Sample placeholder data
    let allGuides: [FaultGuide] = [
        FaultGuide(title: "Deprag Fault 515", tags: ["deprag", "515"], fileType: .pdf, filename: "Deprag_Fault_515.pdf"),
        FaultGuide(title: "ABB Robot E101", tags: ["abb", "robot", "E101"], fileType: .link, filename: "https://abb.com/fault/E101"),
        FaultGuide(title: "Fanuc Servo Alarm 17", tags: ["fanuc", "servo", "17"], fileType: .pdf, filename: "Fanuc_Servo_17.pdf")
    ]
    
    var filteredGuides: [FaultGuide] {
        if searchText.isEmpty {
            return allGuides.sorted { $0.title < $1.title }
        } else {
            return allGuides.filter {
                $0.title.localizedCaseInsensitiveContains(searchText) ||
                $0.tags.contains(where: { $0.localizedCaseInsensitiveContains(searchText) })
            }.sorted { $0.title < $1.title }
        }
    }
    
    var body: some View {
        ZStack {
            StandardBackgroundView().ignoresSafeArea()
            
            VStack(spacing: 0) {
                TopNavBar(title: "Fault Trees & Guides", onBack: { dismiss() }, onHome: { dismiss() })
                
                // Search Bar
                TextField("Search fault code, e.g. 515", text: $searchText)
                    .textFieldStyle(RoundedBorderTextFieldStyle())
                    .padding()
                
                // Scrollable List
                ScrollView {
                    VStack(spacing: 12) {
                        ForEach(filteredGuides) { guide in
                            HStack {
                                Image(systemName: guide.iconName)
                                    .foregroundColor(.white)
                                    .padding(.trailing, 8)
                                
                                Text(guide.title)
                                    .foregroundColor(.white)
                                
                                Spacer()
                            }
                            .padding()
                            .background(Color.black.opacity(0.2))
                            .cornerRadius(10)
                        }
                    }
                    .padding()
                }
            }
        }
        .navigationBarHidden(true)
    }
}