import SwiftUI

struct BreakdownControlView: View {
    @Environment(\.dismiss) var dismiss
    var breakdown: Breakdown

    @State private var showSupportPopup = false
    @State private var selectedSupportTeam: String?
    @State private var showRectificationPrompt = false
    @State private var rectificationText = ""

    var body: some View {
        StandardBackgroundView {
            VStack {
                TopNavBar(title: "Breakdown Control", onBack: { dismiss() }, onHome: { dismiss() })

                ScrollView {
                    VStack(alignment: .leading, spacing: 20) {
                        // Breakdown info
                        Group {
                            Text("Zone: \(breakdown.zone)")
                            Text("Equipment: \(breakdown.equipment)")
                            Text("Reported: \(breakdown.timeSubmitted.formatted(.dateTime.hour().minute()))")
                        }
                        .foregroundColor(.white)
                        .padding(.horizontal)

                        // 1. Spare Parts Selection
                        NavigationLink(destination:
                            SelectPartsView(
                                allParts: SparePartManager.shared.availableParts,
                                onSelection: { selected in
                                    SparePartManager.shared.selectedParts.append(selected)
                                }
                            )
                        ) {
                            Text("Go to Spare Parts")
                                .frame(maxWidth: .infinity)
                                .padding()
                                .background(Color.white)
                                .cornerRadius(10)
                        }
                        .padding(.horizontal)

                        // 2. Request Support
                        Button("Request Support") {
                            showSupportPopup = true
                        }
                        .frame(maxWidth: .infinity)
                        .padding()
                        .background(Color.orange)
                        .foregroundColor(.white)
                        .cornerRadius(10)
                        .padding(.horizontal)

                        // 3. Fault Trees & Manuals
                        Button("Open Fault Trees & Manuals") {
                            // Placeholder for future OCR/manual logic
                        }
                        .frame(maxWidth: .infinity)
                        .padding()
                        .background(Color.blue)
                        .foregroundColor(.white)
                        .cornerRadius(10)
                        .padding(.horizontal)

                        // 4. Complete Job Button
                        Button("âœ… Complete Job") {
                            showRectificationPrompt = true
                        }
                        .frame(height: 50)
                        .frame(maxWidth: .infinity)
                        .background(Color.green)
                        .foregroundColor(.white)
                        .cornerRadius(12)
                        .padding(.horizontal)
                    }
                    .padding(.bottom, 40)
                }
            }
        }
        // Support popup
        .confirmationDialog("Who do you request?", isPresented: $showSupportPopup) {
            Button("Riv Techs") { selectedSupportTeam = "Riv Techs" }
            Button("Controls") { selectedSupportTeam = "Controls" }
            Button("Cancel", role: .cancel) {}
        }

        // Rectification prompt
        .alert("How did you rectify the issue?", isPresented: $showRectificationPrompt) {
            TextField("Enter details...", text: $rectificationText)
            Button("Submit") {
                // Simulated job close logic
                SparePartManager.shared.clearSelectedParts()
                dismiss()
            }
            Button("Cancel", role: .cancel) {}
        }
    }
}