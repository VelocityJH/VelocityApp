import SwiftUI

struct CompletedJobsView: View {
    @Environment(\.dismiss) var dismiss
    @ObservedObject var breakdownManager = BreakdownManager.shared

    var body: some View {
        ZStack {
            StandardBackgroundView().ignoresSafeArea()

            VStack(spacing: 0) {
                TopNavBar(
                    title: "Completed Jobs",
                    onBack: { dismiss() },
                    onHome: { dismiss() }
                )

                ScrollView {
                    if breakdownManager.completedBreakdowns.isEmpty {
                        Text("No completed jobs")
                            .foregroundColor(.white)
                            .padding(.top, 20)
                    } else {
                        VStack(spacing: 16) {
                            ForEach(breakdownManager.completedBreakdowns) { breakdown in
                                VStack(alignment: .leading, spacing: 8) {
                                    Text("Zone: \(breakdown.zone)").bold()
                                    Text("Equipment: \(breakdown.equipment)")
                                    Text("Submitted by: \(breakdown.submittedBy)")
                                    Text("Completed by: \(breakdown.completedBy ?? "Unknown")")

                                    if let rect = breakdown.rectificationText {
                                        Text("Fix: \(rect)").italic()
                                    }

                                    if let end = breakdown.endTime {
                                        let duration = Int(end.timeIntervalSince(breakdown.timeSubmitted) / 60)
                                        Text("Duration: \(duration) mins")
                                            .foregroundColor(.gray)
                                    }
                                }
                                .padding()
                                .frame(maxWidth: .infinity, alignment: .leading)
                                .background(Color.black.opacity(0.2))
                                .cornerRadius(12)
                                .padding(.horizontal)
                            }
                        }
                        .padding(.top)
                    }
                }
            }
        }
    }
}