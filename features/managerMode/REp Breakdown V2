import SwiftUI

struct ReportBreakdownView: View {
    @Environment(\.dismiss) var dismiss
    @ObservedObject var breakdownManager = BreakdownManager.shared
    @ObservedObject var userManager = UserManager.shared

    @State private var zone: String = ""
    @State private var equipment: String = ""
    @State private var faultSummary: String = ""
    @State private var navigateToControl = false
    @State private var newBreakdown: Breakdown?

    var body: some View {
        VStack(spacing: 20) {
            TextField("Zone", text: $zone)
                .textFieldStyle(.roundedBorder)

            TextField("Equipment", text: $equipment)
                .textFieldStyle(.roundedBorder)

            TextField("Fault Summary", text: $faultSummary)
                .textFieldStyle(.roundedBorder)

            Button("Submit Breakdown") {
                submitBreakdown()
            }
            .buttonStyle(.borderedProminent)

            NavigationLink(
                destination: {
                    if let breakdown = newBreakdown {
                        BreakdownControlView(breakdown: breakdown)
                    } else {
                        EmptyView()
                    }
                },
                isActive: $navigateToControl,
                label: { EmptyView() }
            )
            .disabled(newBreakdown == nil)
        }
        .padding()
        .navigationTitle("Report Breakdown")
    }

    private func submitBreakdown() {
        let reporter = userManager.username
        let breakdown = Breakdown(
            zone: zone,
            equipment: equipment,
            faultSummary: faultSummary,
            submittedBy: reporter,
            timeSubmitted: Date(),
            status: "Open",
            downtime: 0,
            joinedEngineers: [],
            endTime: nil,
            completedBy: nil,
            rectificationText: nil,
            startTime: Date()
        )

        breakdownManager.addBreakdown(breakdown)
        breakdownManager.joinJob(breakdown: breakdown)
        newBreakdown = breakdown
        navigateToControl = true
    }
}